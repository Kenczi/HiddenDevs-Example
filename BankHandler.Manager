--!strict

local Players = game:GetService("Players")
local RS = game:GetService("ReplicatedStorage")
local TS = game:GetService("TweenService")
local tweenInfo = TweenInfo.new(0.2)

-- LOCAL 

local player = Players.LocalPlayer

-- VARIABLES

local remote : RemoteEvent = RS.Remotes.BankEvent

local UI : ScreenGui = script.Parent.Parent
local loginFrame : Frame | Instance = UI:FindFirstChild("LoginFrame")
local bankFrame : Frame | Instance = UI:FindFirstChild("WelcomeFrame")

local userLoginImage : ImageLabel | Instance = loginFrame:FindFirstChild("Background"):FindFirstChild("UserImage")
local userBankImage : ImageLabel | Instance = bankFrame:FindFirstChild("UserInfo"):FindFirstChild("Avatar")
local userBankNickname : TextLabel | Instance = bankFrame:FindFirstChild("UserInfo"):FindFirstChild("Username")
local userBankFullName : TextLabel | Instance = bankFrame:FindFirstChild("DescriptionFrame"):FindFirstChild("Title")

local nick : TextLabel = script.Parent.Parent:FindFirstChild("Nickname")
local currMoney : TextLabel = script.Parent.Parent:FindFirstChild("CurrentMoney")
local currBankMoney : TextLabel | Instance = bankFrame:FindFirstChild("UserInfo"):FindFirstChild("Cash")
local accountID : TextLabel | Instance = bankFrame:FindFirstChild("UserInfo"):FindFirstChild("AccountID")
local currMoneyInDeposit : TextLabel | Instance = bankFrame:FindFirstChild("DescriptionFrame"):FindFirstChild("CashInfo")

local notificationFrame : Frame | Instance = bankFrame:FindFirstChild("Notification")
local successLabel : TextLabel | Instance = notificationFrame:FindFirstChild("SuccessLabel")
local errorLabel : TextLabel | Instance = notificationFrame:FindFirstChild("ErrorLabel")

local depositFrame : Frame | Instance = bankFrame:FindFirstChild("DepositFrame")
local transferFrame : Frame | Instance = bankFrame:FindFirstChild("TransferFrame")
local withdrawFrame : Frame | Instance = bankFrame:FindFirstChild("WithdrawFrame")

local errorSound : Sound = script.Parent.Sounds.Error
local successSound : Sound = script.Parent.Sounds.Success
local hoverSound : Sound = script.Parent.Sounds.Hover

local debounce : boolean = false

-- CUSTOMIZABLE VALUES

local Values : Folder = script.Parent.Values

local minDeposit : NumberValue | Instance = Values:FindFirstChild("MinimumDeposit")
local maxDeposit : NumberValue | Instance = Values:FindFirstChild("MaximumDeposit")
local minWithdraw : NumberValue | Instance = Values:FindFirstChild("MinimumWithdraw")
local maxWithdraw : NumberValue | Instance = Values:FindFirstChild("MaximumWithdraw")
local minTransfer : NumberValue | Instance = Values:FindFirstChild("MinimumTransfer")
local maxTransfer : NumberValue | Instance = Values:FindFirstChild("MaximumTransfer")

-- APPLYING PLAYER CHANGES

;(userLoginImage :: ImageLabel).Image = Players:GetUserThumbnailAsync(player.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size420x420);
(userBankImage :: ImageLabel).Image = Players:GetUserThumbnailAsync(player.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size60x60);
(currBankMoney :: TextLabel).Text = "| " .. player:FindFirstChild("leaderstats"):FindFirstChild("Cash").Value .. "$"
(userBankNickname :: TextLabel).Text = player.DisplayName;
(userBankFullName :: TextLabel).Text = "Welcome, " .. player.Name .. "!"
(accountID :: TextLabel).Text = tostring(math.random(0000000, 9999999));
(currMoneyInDeposit :: TextLabel).Text = player:FindFirstChild("BankCash").Value .. "$"
nick.Text = player.DisplayName
currMoney.Text = player:FindFirstChild("leaderstats"):FindFirstChild("Cash").Value .. "$"

player:FindFirstChild("leaderstats"):FindFirstChild("Cash"):GetPropertyChangedSignal("Value"):Connect(function()
	currMoney.Text = player:FindFirstChild("leaderstats"):FindFirstChild("Cash").Value .. "$"
	(currBankMoney :: TextLabel).Text = "| " .. player:FindFirstChild("leaderstats"):FindFirstChild("Cash").Value .. "$"
end)

player:FindFirstChild("BankCash"):GetPropertyChangedSignal("Value"):Connect(function()
	(currMoneyInDeposit :: TextLabel).Text = player:FindFirstChild("BankCash").Value .. "$"
end)

-- FUNCTIONS

local function NotificationTween()
	task.spawn(function()
		TS:Create(notificationFrame, tweenInfo, {Position = UDim2.new(0.126, 0, 0.995, 0)}):Play()
		task.wait(1.8)
		TS:Create(notificationFrame, tweenInfo, {Position = UDim2.new(0.126, 0, 0.874, 0)}):Play()
	end)
end

local function Error(reason : string)
	NotificationTween();
	(errorLabel :: TextLabel).Text = reason;
	(successLabel :: TextLabel).Visible = false
	(errorLabel :: TextLabel).Visible = true
	(notificationFrame :: Frame).Visible = true
	errorSound:Play()
	
	task.wait(2.2);
	(errorLabel :: TextLabel).Visible = false
	(notificationFrame :: Frame).Visible = false
	debounce = false
end

local function Success(reason : string)
	NotificationTween();
	(successLabel :: TextLabel).Text = reason;
	(errorLabel :: TextLabel).Visible = false
	(successLabel :: TextLabel).Visible = true
	(notificationFrame :: Frame).Visible = true
	successSound:Play()

	task.wait(2.2);
	(successLabel :: TextLabel).Visible = false
	(notificationFrame :: Frame).Visible = false
	debounce = false
end

local function Buttons()
	for _, closeButton in UI:GetDescendants() do
		if not closeButton:IsA("TextButton") then continue end
		if closeButton.Name ~= "X" then continue end
		
		closeButton.MouseButton1Click:Connect(function()
			(closeButton.Parent :: Frame).Visible = false
		end)
	end
	
	for _, button in UI:GetDescendants() do
		
		if button:IsA("ImageButton") then
			local origin : Color3 = button.ImageColor3

			button.MouseEnter:Connect(function()
				TS:Create(button, tweenInfo, {ImageColor3 = Color3.fromRGB(97, 184, 100)}):Play()
				hoverSound:Play()
			end)

			button.MouseLeave:Connect(function()
				TS:Create(button, tweenInfo, {ImageColor3 = origin}):Play()
			end)
			
		end
		if not button:IsA("TextButton") then continue end
		
		local origin : UDim2 = button.Size
		
		button.MouseEnter:Connect(function()
			TS:Create(button, tweenInfo, {Size = origin + UDim2.new(0.01, 0, 0.01, 0)}):Play()
			hoverSound:Play()
		end)
		
		button.MouseLeave:Connect(function()
			TS:Create(button, tweenInfo, {Size = origin}):Play()
		end)
	end
end

local function NumbersOnly()
	for _, box in UI:GetDescendants() do
		if not box:IsA("TextBox") then continue end
		if box.Name ~= "InputAmount" then continue end
		
		box:GetPropertyChangedSignal("Text"):Connect(function()
			box.Text = box.Text:gsub("[^%d]","")
		end)
	end
end

Buttons()
NumbersOnly()

-- MODULE

local manager = {}

function manager.Deposit()
	local depositButton : ImageButton | Instance = bankFrame:FindFirstChild("Deposit")
	local confirmDeposit : TextButton | Instance = depositFrame:FindFirstChild("ConfirmButton")
	local inputBox : TextBox | Instance = depositFrame:FindFirstChild("InputAmount")
	local currentCash : TextLabel | Instance = depositFrame:FindFirstChild("CashInfo");
	
	(depositButton :: ImageButton).MouseButton1Up:Connect(function()
		(withdrawFrame :: Frame).Visible = false
		(transferFrame :: Frame).Visible = false
		(depositFrame :: Frame).Visible = true
		(currentCash :: TextLabel).Text = player:FindFirstChild("leaderstats"):FindFirstChild("Cash").Value .. "$";
	end);
		
	(confirmDeposit :: TextButton).MouseButton1Up:Connect(function()
		if debounce then return end
		debounce = true
		if #(inputBox :: TextBox).Text == 0 then Error("Looks like you forgot to enter amount") return end
		if tonumber((inputBox :: TextBox).Text) > player:FindFirstChild("leaderstats"):FindFirstChild("Cash").Value then Error("You don't have enough money") return end
		if tonumber((inputBox :: TextBox).Text) < (minDeposit :: NumberValue).Value then Error("Value is to small. Minimum value is " .. (minDeposit :: NumberValue).Value .. "$") return end
		if tonumber((inputBox :: TextBox).Text) > (maxDeposit :: NumberValue).Value then Error("Value is to big. Maximum value is " .. (maxDeposit :: NumberValue).Value .. "$") return end
			
		remote:FireServer(tonumber((inputBox :: TextBox).Text), 2, nil)
		task.wait(0.05);
		(currentCash :: TextLabel).Text = player:FindFirstChild("leaderstats"):FindFirstChild("Cash").Value .. "$"
		Success("You have successively deposited your money")
	end)
end

function manager.Transfer()
	local transferButton : ImageButton | Instance = bankFrame:FindFirstChild("Transfer")
	local confirmTransfer : TextButton | Instance = transferFrame:FindFirstChild("ConfirmButton")
	local inputBox : TextBox | Instance = transferFrame:FindFirstChild("InputAmount")
	local targetPlayerInput : TextBox | Instance = transferFrame:FindFirstChild("InputPlayer")
	local currentCash : TextLabel | Instance = transferFrame:FindFirstChild("CashInfo");
	
	(transferButton :: ImageButton).MouseButton1Up:Connect(function()
		(withdrawFrame :: Frame).Visible = false
		(transferFrame :: Frame).Visible = true
		(depositFrame :: Frame).Visible = false
		(currentCash :: TextLabel).Text = player:FindFirstChild("BankCash").Value .. "$"
	end);
	
	(confirmTransfer :: TextButton).MouseButton1Up:Connect(function()
		if debounce then return end
		debounce = true
		if #(inputBox :: TextBox).Text == 0 then Error("Looks like you forgot to enter amount") return end
		if tonumber((inputBox :: TextBox).Text) > player:FindFirstChild("BankCash").Value then Error("You don't have enough money") return end
		if #(targetPlayerInput :: TextBox).Text == 0 then Error("Looks like you forgot to enter target player") return end
		if Players:FindFirstChild((targetPlayerInput :: TextBox).Text) == nil then Error("No player found") return end
		if tonumber((inputBox :: TextBox).Text) < (minTransfer :: NumberValue).Value then Error("Value is to small. Minimum value is " .. (minTransfer :: NumberValue).Value .. "$") return end
		if tonumber((inputBox :: TextBox).Text) > (maxTransfer :: NumberValue).Value then Error("Value is to big. Maximum value is " .. (maxTransfer :: NumberValue).Value .. "$") return end
		
		local target = Players:FindFirstChild((targetPlayerInput :: TextBox).Text)
		
		remote:FireServer(tonumber((inputBox :: TextBox).Text), 3, target)
		task.wait(0.1);
		(currentCash :: TextLabel).Text = player:FindFirstChild("BankCash").Value .. "$"
		Success("You have successively transfered your money")
	end)
end

function manager.Withdraw()
	local withdrawButton : ImageButton | Instance = bankFrame:FindFirstChild("Withdraw")
	local confirmWithdraw : TextButton | Instance = withdrawFrame:FindFirstChild("ConfirmButton")
	local inputBox : TextBox | Instance = withdrawFrame:FindFirstChild("InputAmount")
	local currentCash : TextLabel | Instance = withdrawFrame:FindFirstChild("CashInfo");
	
	(withdrawButton :: ImageButton).MouseButton1Up:Connect(function()
		(withdrawFrame :: Frame).Visible = true
		(transferFrame :: Frame).Visible = false
		(depositFrame :: Frame).Visible = false
		(currentCash :: TextLabel).Text = player:FindFirstChild("BankCash").Value .. "$"
	end);
		
	(confirmWithdraw :: TextButton).MouseButton1Up:Connect(function()
		if debounce then return end
		debounce = true
		if #(inputBox :: TextBox).Text == 0 then Error("Looks like you forgot to enter amount") return end
		if tonumber((inputBox :: TextBox).Text) > player:FindFirstChild("BankCash").Value then Error("You don't have enough money") return end
		if tonumber((inputBox :: TextBox).Text) < (minWithdraw :: NumberValue).Value then Error("Value is to small. Minimum value is " .. (minWithdraw :: NumberValue).Value .. "$") return end
		if tonumber((inputBox :: TextBox).Text) > (maxWithdraw :: NumberValue).Value then Error("Value is to big. Maximum value is " .. (maxWithdraw :: NumberValue).Value .. "$")return end
			
		remote:FireServer(tonumber((inputBox :: TextBox).Text), 1, nil)
		task.wait(0.05);
		(currentCash :: TextLabel).Text = player:FindFirstChild("BankCash").Value .. "$"
		Success("You have successively withdrawed your money")
	end)
end



manager.Deposit() manager.Transfer() manager.Withdraw()
return manager
